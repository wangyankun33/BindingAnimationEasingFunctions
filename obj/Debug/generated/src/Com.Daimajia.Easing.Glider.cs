//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Daimajia.Easing {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.daimajia.easing']/class[@name='Glider']"
	[global::Android.Runtime.Register ("com/daimajia/easing/Glider", DoNotGenerateAcw=true)]
	public partial class Glider : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/daimajia/easing/Glider", typeof (Glider));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Glider (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.daimajia.easing']/class[@name='Glider']/constructor[@name='Glider' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Glider () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.daimajia.easing']/class[@name='Glider']/method[@name='glide' and count(parameter)=3 and parameter[1][@type='com.daimajia.easing.Skill'] and parameter[2][@type='float'] and parameter[3][@type='android.animation.PropertyValuesHolder']]"
		[Register ("glide", "(Lcom/daimajia/easing/Skill;FLandroid/animation/PropertyValuesHolder;)Landroid/animation/PropertyValuesHolder;", "")]
		public static unsafe global::Android.Animation.PropertyValuesHolder Glide (global::Com.Daimajia.Easing.Skill skill, float duration, global::Android.Animation.PropertyValuesHolder propertyValuesHolder)
		{
			const string __id = "glide.(Lcom/daimajia/easing/Skill;FLandroid/animation/PropertyValuesHolder;)Landroid/animation/PropertyValuesHolder;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((skill == null) ? IntPtr.Zero : ((global::Java.Lang.Object) skill).Handle);
				__args [1] = new JniArgumentValue (duration);
				__args [2] = new JniArgumentValue ((propertyValuesHolder == null) ? IntPtr.Zero : ((global::Java.Lang.Object) propertyValuesHolder).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Animation.PropertyValuesHolder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (skill);
				global::System.GC.KeepAlive (propertyValuesHolder);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.daimajia.easing']/class[@name='Glider']/method[@name='glide' and count(parameter)=3 and parameter[1][@type='com.daimajia.easing.Skill'] and parameter[2][@type='float'] and parameter[3][@type='android.animation.ValueAnimator']]"
		[Register ("glide", "(Lcom/daimajia/easing/Skill;FLandroid/animation/ValueAnimator;)Landroid/animation/ValueAnimator;", "")]
		public static unsafe global::Android.Animation.ValueAnimator Glide (global::Com.Daimajia.Easing.Skill skill, float duration, global::Android.Animation.ValueAnimator animator)
		{
			const string __id = "glide.(Lcom/daimajia/easing/Skill;FLandroid/animation/ValueAnimator;)Landroid/animation/ValueAnimator;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((skill == null) ? IntPtr.Zero : ((global::Java.Lang.Object) skill).Handle);
				__args [1] = new JniArgumentValue (duration);
				__args [2] = new JniArgumentValue ((animator == null) ? IntPtr.Zero : ((global::Java.Lang.Object) animator).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Animation.ValueAnimator> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (skill);
				global::System.GC.KeepAlive (animator);
			}
		}

	}
}
